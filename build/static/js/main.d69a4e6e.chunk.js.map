{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","capital","setCapital","name","setName","useEffect","axios","get","then","json","className","type","onChange","e","target","value","Table","striped","bordered","hover","style","width","filter","word","includes","map","country","region","src","flag","height","alt","Object","values","toString","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OA6EeA,MAtEf,WACE,IADa,EAEWC,mBAAS,IAFpB,mBAENC,EAFM,KAEAC,EAFA,OAGiBF,qBAHjB,mBAGNG,EAHM,KAGGC,EAHH,OAIWJ,qBAJX,mBAINK,EAJM,KAIAC,EAJA,KA2Cb,OApCAC,qBAAU,WACRC,IAAMC,IAHI,wCAGKC,MAAK,SAAAC,GAAI,OAAIT,EAAQS,EAAKV,SACzCK,EAAQ,MAEP,IAiCD,sBAAKM,UAAU,MAAf,UACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACE,gEACA,uBAAOC,KAAK,OAAOC,SAAU,SAAAC,GAAC,OAAIX,EAAWW,EAAEC,OAAOC,aAExD,sBAAKL,UAAU,WAAf,UACE,6CACA,uBAAOC,KAAK,OAAOC,SAAU,SAAAC,GAAC,OAAIT,EAAQS,EAAEC,OAAOC,gBAGvD,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAA7B,UACE,gCACE,+BACE,oBAAIC,MAAO,CAAEC,MAAO,KAApB,kBACA,oBAAID,MAAO,CAAEC,MAAO,KAApB,qBACA,oBAAID,MAAO,CAAEC,MAAO,KAApB,oBACA,oBAAID,MAAO,CAAEC,MAAO,KAApB,uBAGJ,gCAlDApB,EACOF,EAAKuB,QAAO,SAAAC,GAAI,OAAIA,EAAKtB,QAAQuB,SAASvB,MACrCwB,KAAI,SAAAC,GAChB,OACE,+BACE,6BAAKA,EAAQvB,OACb,6BAAKuB,EAAQzB,UACb,6BAAKyB,EAAQC,SACb,6BAAI,qBAAKjB,UAAU,oBAAoBkB,IAAKF,EAAQG,KAAMT,MAAO,CAAEU,OAAQ,IAAKT,MAAO,KAAOU,IAAI,aAM/FhC,EAAKuB,QAAO,SAAAC,GAAI,OAAGS,OAAOC,OAAOV,GAAMW,WAAWV,SAASrB,MACtDsB,KAAI,SAAAC,GAEhB,OACE,+BACE,6BAAKA,EAAQvB,OACb,6BAAKuB,EAAQzB,UACb,6BAAKyB,EAAQC,SACb,6BAAI,qBAAKjB,UAAU,oBAAoBkB,IAAKF,EAAQG,KAAMT,MAAO,CAAEU,OAAQ,IAAKT,MAAM,KAAOU,IAAI,sBC/B9FI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d69a4e6e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport axios from 'axios';\n\nimport { Table } from 'react-bootstrap';\n\n\nfunction App() {\n  let result;\n  const [data, setData] = useState([]);\n  const [capital, setCapital] = useState();\n  const [name, setName] = useState();\n  const url = \"https://restcountries.eu/rest/v2/all\";\n\n  useEffect(() => {\n    axios.get(url).then(json => setData(json.data))\n    setName(\"\");\n    \n  }, [])\n  \n  const renderTable = () => {\n    if (capital) {\n      result = data.filter(word => word.capital.includes(capital));\n      return result.map(country => {\n        return (\n          <tr>\n            <td>{country.name}</td>\n            <td>{country.capital}</td>\n            <td>{country.region}</td>\n            <td><img className=\"img-fluid rounded\" src={country.flag} style={{ height: 150, width: 150 }} alt=\"\" /></td>\n          </tr>\n        )\n      })\n    }\n    else{\n      result = data.filter(word =>Object.values(word).toString().includes(name))\n      return result.map(country => {\n        \n        return (\n          <tr>\n            <td>{country.name}</td>\n            <td>{country.capital}</td>  \n            <td>{country.region}</td>\n            <td><img className=\"img-fluid rounded\" src={country.flag} style={{ height: 150, width:150 }} alt=\"\" /></td>\n          </tr>\n        )\n      })\n    }\n\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <h1>Başkentlere Göre Arama</h1>\n          <input type=\"text\" onChange={e => setCapital(e.target.value)} />\n        </div>\n        <div className=\"col-md-6\">\n          <h1>Genel Arama</h1>\n          <input type=\"text\" onChange={e => setName(e.target.value)} />\n        </div>\n      </div>\n      <Table striped bordered hover>\n        <thead>\n          <tr>\n            <th style={{ width: 350 }}>Name</th>\n            <th style={{ width: 350 }}>Capital</th>\n            <th style={{ width: 350 }}>Region</th>\n            <th style={{ width: 350 }}>Flag</th>\n          </tr>\n        </thead>\n        <tbody>{renderTable()}</tbody>\n      </Table>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}